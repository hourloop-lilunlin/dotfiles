#!/usr/bin/env bash

pkgs=(
    nixpkgs.bat
    nixpkgs.delta
    nixpkgs.eza
    nixpkgs.fd
    nixpkgs.fzf
    nixpkgs.git
    nixpkgs.lazygit
    nixpkgs.lazydocker
    nixpkgs.neovim
    nixpkgs.ripgrep
    nixpkgs.stow
    nixpkgs.tmux
    nixpkgs.yq-go
    nixpkgs.zoxide
    nixpkgs.zsh
)

BLACK='\033[0;30m'
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

DOTFILES="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"

info() {
    if [ "$dry_run" = "1" ]; then
        echo -e "${BLACK}$(date +'%F %T')${NC} [${GREEN}info${NC} ] [DRY RUN] $1"
    else
        echo -e "${BLACK}$(date +'%F %T')${NC} [${GREEN}info${NC} ] $1"
    fi
}

error() {
    if [ "$dry_run" = "1" ]; then
        echo -e "${BLACK}$(date +'%F %T')${NC} [${RED}error${NC}] [DRY RUN] $1"
    else
        echo -e "${BLACK}$(date +'%F %T')${NC} [${RED}error${NC}] $1"
    fi
}

install() {
    info "Installing userland packages with nix"
    if [ "$dry_run" = "1" ]; then
        return
    fi

    {
        export USER="$(id -u -n)"

        if test ! -e /nix; then
            sudo sh -c "mkdir -p /nix && chown -R $USER:$USER /nix"
            info "Installing nix"
            curl -sL https://nixos.org/nix/install | bash -s -- --no-daemon > /dev/null 2>&1
        fi

        info "Installing packages ($(echo $@))"
        command nix-env -iAP "$@" 2>&1 \
            | grep --line-buffered -vE '^(copying|building|generating|  /nix/store|these|this path will be fetched)'
    } & disown

}

if [ "$1" = "--dry" ]; then
    dry_run="1"
fi

main() {
    source /etc/os-release

    check_os

    install "${pkgs[@]}"

    info "Stowing '$DOTFILES/home' to '$HOME'"
    if ! [ "$dry_run" = "1" ]; then
        pushd "$DOTFILES" > /dev/null
        stow -v -t "$HOME" home/
        popd > /dev/null
    fi

    info "Setting up tmux plugin manager"
    if ! [ "$dry_run" = "1" ]; then
        git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
    fi
}

main

# vim: ft=sh
